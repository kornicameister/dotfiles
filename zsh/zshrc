#!/bin/zsh


ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=6'
ZSH_AUTOSUGGEST_STRATEGY=(history completion)

# directory settings
setopt AUTO_CD                   # Auto changes to a directory without typing cd.
setopt AUTO_PUSHD                # Push the old directory onto the stack on cd.
setopt PUSHD_IGNORE_DUPS         # Do not store duplicates in the stack.
setopt PUSHD_SILENT              # Do not print the directory stack after pushd or popd.
setopt PUSHD_TO_HOME             # Push to home directory when no argument is given.
setopt CDABLE_VARS               # Change directory to a path stored in a variable.
setopt MULTIOS                   # Write to multiple descriptors.
setopt EXTENDED_GLOB             # Use extended globbing syntax.
unsetopt CLOBBER                 # Do not overwrite existing files with > and >>. Use >! and >>! to bypass.

# history settings
setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ':start:elapsed;command' format.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire a duplicate event first when trimming history.
setopt HIST_IGNORE_DUPS          # Do not record an event that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete an old recorded event if a new event is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a previously found event.
setopt HIST_IGNORE_SPACE         # Do not record an event starting with a space.
setopt HIST_SAVE_NO_DUPS         # Do not write a duplicate event to the history file.
setopt HIST_VERIFY               # Do not execute immediately upon history expansion.
setopt HIST_BEEP                 # Beep when accessing non-existent history.

HISTFILE="${ZDOTDIR:-$HOME}/.zhistory"  # The path to the history file.
HISTSIZE=10000                   # The maximum number of events to save in the internal history.
SAVEHIST=10000                   # The maximum number of events to save in the history file.

# completion settings

# various settings
setopt CORRECT                   # correct commands

# settings for prezto imported stuff
zstyle ':prezto:*:*' color 'yes'
zstyle ':prezto:*:*' case-sensitive 'false'

zstyle ':prezto:module:utility' safe-ops 'yes'
zstyle ':prezto:module:utility:ls' dirs-first 'yes'

zstyle ':prezto:module:ssh:load' identities 'github'

zstyle ':prezto:module:editor' key-bindings 'emacs'
zstyle ':prezto:module:editor' dot-expansion 'yes'
zstyle ':prezto:module:editor' ps-context 'yes'

# load zplugin

[ $commands[goenv] ] && {
    eval "$(goenv init - --no-rehash zsh)";
    export PATH="$GOROOT/bin:$PATH";
    export PATH="$GOPATH/bin:$PATH";
    export GOBIN="$GOPATH/bin";
}
[ $commands[pyenv] ] && {
    eval "$(pyenv init - --no-rehash zsh)";
    eval "$(pyenv virtualenv-init - zsh)";
}
[ $commands[nodenv] ] && eval "$(nodenv init - --no-rehash zsh)"
[ $commands[kubectl] ] && source <(kubectl completion zsh)

source ~/.zplugin/zplugin.zsh

# prompt
zplugin ice pick"async.zsh" src"pure.zsh"
zplugin light sindresorhus/pure

# plugins of all sorts
zplugin load sobolevn/wakatime-zsh-plugin
zplugin load djui/alias-tips
zplugin load hlissner/zsh-autopair

# highlighting plugin for cmd
zplugin ice pick"h.sh"
zplugin light paoloantinori/hhighlighter

# jq
zplugin ice from'gh-r' \
    as'command' \
    mv'jq* -> jq' \
    bpick'*linux*'
zplugin load stedolan/jq

# autojump
zplugin ice \
    wait'2' \
    lucid \
    as'command' \
    pick'fasd' \
    atpull'!git reseti --hard' \
    atload'source ~/.dotfiles/mods/fasd.zsh'
zplugin load clvv/fasd

# dircolors
zplugin ice wait"0c" lucid reset \
    atclone"local P=${${(M)OSTYPE:#*darwin*}:+g}
            \${P}sed -i \
            '/DIR/c\DIR 38;5;63;1' LS_COLORS; \
            \${P}dircolors -b LS_COLORS > c.zsh" \
    atpull'%atclone ; !git reset --hard' pick"c.zsh" nocompile'!' \
    atload'zstyle ":completion:*" list-colors “${(s.:.)LS_COLORS}”'
zplugin light trapd00r/LS_COLORS

# direnv
zplugin ice as"program" make'!' atclone'./direnv hook zsh > zhook.zsh' \
    atpull'%atclone' src"zhook.zsh"
zplugin light direnv/direnv

# git extra stuff
zplugin ice wait lucid \
    as'program' \
    pick'$ZPFX/bin/git-*' \
    make'PREFIX=$ZPFX' \
    nocompile
zplugin light tj/git-extras

zplugin ice as"program" pick"bin/git-dsf"
zplugin light zdharma/zsh-diff-so-fancy

zplugin ice wait"2" lucid
zplugin load voronkovich/gitignore.plugin.zsh

zplugin snippet PZT::modules/environment/init.zsh
zplugin snippet PZT::modules/terminal/init.zsh
zplugin snippet PZT::modules/editor/init.zsh
zplugin snippet PZT::modules/utility/init.zsh
zplugin snippet PZT::modules/helper/init.zsh
zplugin snippet PZT::modules/git/alias.zsh
zplugin snippet PZT::modules/docker/alias.zsh
zplugin snippet PZT::modules/gpg/init.zsh
zplugin snippet PZT::modules/ssh/init.zsh

# Autosuggestions & fast-syntax-highlighting
zplugin ice wait \
    lucid \
    atload'source ~/.dotfiles/mods/comp.zsh'
zplugin load zsh-users/zsh-completions

zplugin ice wait"1" lucid \
    atinit"ZPLGM[COMPINIT_OPTS]=-C; zpcompinit; zpcdreplay"
zplugin load zdharma/fast-syntax-highlighting

zplugin ice wait"1" lucid \
    atload"!_zsh_autosuggest_start"
zplugin load zsh-users/zsh-autosuggestions

zplugin load zsh-users/zsh-history-substring-search
zplugin load zdharma/history-search-multi-word

# github issue notifier
zplugin ice lucid id-as'GitHub-notify' \
        ice on-update-of'~/.cache/zsh-github-issues/new_titles.log' \
        notify'New issue: $NOTIFY_MESSAGE'
zplugin light zdharma/zsh-github-issues

GIT_PROJECTS=aiolibs/aiohttp:kornicameister/axion:kornicameister:dotfiles
zplugin ice service"GIT" pick"zsh-github-issues.service.zsh" wait'2' lucid
zplugin light zdharma/zsh-github-issues

source ~/.fzf.zsh
source ~/.fzf.settings
source ~/.npmrc.sh

[[ -f ~/.zshrc.local ]] && source ~/.zshrc.local
