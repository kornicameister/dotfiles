#!/usr/bin/env bash

install_pyenv_plugins() {
    local plugins_dir
    local plugins

    plugins_dir=$(realpath "${PWD}/dependencies/pyenv/plugins/")
    plugins=(
        pyenv-update
        pyenv-virtualenv
        pyenv-ccache
        pyenv-doctor
    )

    mkdir -p "${plugins_dir}"
    for plugin in ${plugins[*]}; do
        if [ ! -d "${plugins_dir}/${plugin}" ]; then
            git clone "git://github.com/pyenv/${plugin}.git" "${plugins_dir}/${plugin}"
        fi
    done
    if [ ! -d "${plugins_dir}/xxenv-latest" ]; then
        git clone https://github.com/momo-lab/xxenv-latest "${plugins_dir}/xxenv-latest"
    fi
}

install_nodenv_plugins() {
    local plugins_dir
    local plugins

    plugins_dir=$(realpath "${PWD}/dependencies/nodenv/plugins/")
    plugins=(
        nodenv-update
        nodenv-aliases
        nodenv-package-json-engine
        nodenv-package-rehash
        nodenv-each
        node-build
    )

    mkdir -p "${plugins_dir}"
    for plugin in ${plugins[*]}; do
        if [ ! -d "${plugins_dir}/${plugin}" ]; then
            git clone "git://github.com/nodenv/${plugin}.git" "${plugins_dir}/${plugin}"
        fi
    done
    if [ ! -d "${plugins_dir}/xxenv-latest" ]; then
        git clone https://github.com/momo-lab/xxenv-latest "${plugins_dir}/xxenv-latest"
    fi
}

install_latest_dev() {
    if [ ! -f "$(pyenv root)/version" ]; then
        echo "Installing latest python"

        pyenv latest install -s 2.7
        pyenv latest install -s 3.7
        pyenv latest --print 3.7 >> "$(pyenv root)/version"
    fi
    if [ ! -f "$(nodenv root)/version" ]; then
        echo "Installing latest node"

        nodenv latest install -s 12
        nodenv latest --print 12 >> "$(nodenv root)/version"
    fi
}

init_neovim() (
    echo "Initializing neovim setup"

    if [ ! -d "${PYENV_ROOT}/versions/neovim2" ]; then
        pyenv virtualenv "$(pyenv latest --print 2.7)" neovim2
        "${PYENV_ROOT}"/versions/neovim2/bin/pip install --upgrade -r ./neovim-requirements.txt
        pyenv rehash
    else
        echo "${PYENV_ROOT}/versions/neovim2 venv already exists"
    fi
    if [ ! -d "${PYENV_ROOT}/versions/neovim3" ]; then
        pyenv virtualenv "$(pyenv latest --print 3.7)" neovim3
        "${PYENV_ROOT}"/versions/neovim3/bin/pip install --upgrade -r ./neovim-requirements.txt
        pyenv rehash
    else
        echo "${PYENV_ROOT}/versions/neovim3 venv already exists"
    fi

    if command -v npm >/dev/null 2>&1; then
        npm install -g neovim typescript
        if command -v nodenv >/dev/null 2>&1; then
            nodenv rehash
        fi
    fi

)

post_init_python_system () (
    pip install -r "${PWD}/python-system-requirements.txt"
)

(
    "${PWD}/dependencies/fzf/install" --all --no-bash --no-fish --64;
    "${PWD}/dependencies/nerd-fonts/install.sh" Hack;
    install_pyenv_plugins ;
    install_nodenv_plugins ;
    install_latest_dev ;
    post_init_python_system ;
    init_neovim
)
