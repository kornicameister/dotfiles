#!/usr/bin/env bash

os_upgrade() {
    sudo true
    sudo aptitude update -q
    sudo aptitude safe-upgrade -y
    sudo aptitude autoclean -q -y
    sudo aptitude clean -q -y
    sudo aptitude purge '~c' -q -y
}

hadolint_upgrade() {
    if command -v docker >/dev/null 2>&1; then
        docker pull hadolint/hadolint
    fi
}

neovim_clients_upgrade() (
    if [ -d "${PYENV_ROOT}/versions/neovim2" ]; then
        "${PYENV_ROOT}"/versions/neovim2/bin/pip install -r ./neovim-requirements.txt
    fi
    if [ -d "${PYENV_ROOT}/versions/neovim3" ]; then
        "${PYENV_ROOT}"/versions/neovim3/bin/pip install -r ./neovim-requirements.txt
    fi

    if command -v npm >/dev/null 2>&1; then
        npm upgrade -g neovim prettier typescript
        if command -v nodenv >/dev/null 2>&1; then
            nodenv rehash
        fi
    fi
)

neovim_plugings_upgrade() {
    nvim +PlugUpgrade +PlugInstall +PlugClean +PlugUpdate +qall!
}

docker_compose_upgrade() {
    if command -v docker >/dev/null 2>&1; then
        local remote_compose_version
        local local_compose_version

        remote_compose_version=$(git ls-remote https://github.com/docker/compose | grep refs/tags | grep -oP "[0-9]+\\.[0-9][0-9]+\\.[0-9]+$" | tail -n 1)
        local_compose_version=$(docker-compose --version | grep -oP "[0-9]+\\.[0-9][0-9]+\\.[0-9]" | tail -n 1)

        if [ "${remote_compose_version}" != "${local_compose_version}" ]; then
            echo "Upgrading docker-compose to ${remote_compose_version}"

            local uname_s
            local uname_m

            uname_s=$(uname -s)
            uname_m=$(uname -m)

            sudo sh -c "curl -L https://github.com/docker/compose/releases/download/${remote_compose_version}/docker-compose-${uname_s}-${uname_m} > /usr/local/bin/docker-compose"
            sudo chmod +x /usr/local/bin/docker-compose
        fi
    fi
}

snap_refresh() {
    if command -v snap >/dev/null 2>&1; then
        snap refresh
    fi
}

remove_unwanted_kernels() {
    if command -v purge-old-kernels 2>&1; then
        sudo purge-old-kernels -qy
    fi
}

clear_thumbnails() {
    if [ -d "${HOME}/.cache/thumbnails" ]; then
        sudo rm -rf "${HOME}/.cache/thumbnails/*"
    fi
}

os_upgrade
remove_unwanted_kernels
docker_compose_upgrade
hadolint_upgrade
neovim_clients_upgrade
neovim_plugings_upgrade
snap_refresh
clear_thumbnails
