---
x-build-steps: &build_steps
  steps:
    - run:
        name: Set required env variables
        command: |
          export DEBIAN_FRONTEND=noninteractive
          export DEBCONF_NONINTERACTIVE_SEEN=true
    - run:
        name: Install prerequistes
        command: |
          apt-get update -qq
          apt-get install apt-utils -yqq
          apt-get install git locales python3 python3-apt \
            -yqq --no-install-recommends
          apt-get autoclean -yqq
          apt-get autoremove -yqq
    - run:
        name: Turn-off GIT certificates
        command: |
          git config --global http.sslverify false
    - checkout
    - run:
        name: Configure timezone & timezone
        command: |
          echo 'tzdata tzdata/Areas select Europe' | debconf-set-selections
          echo 'tzdata tzdata/Zones/Europe select Warsaw' | debconf-set-selections

          echo 'locales locales/locales_to_be_generated multiselect en_US.UTF-8 UTF-8' | debconf-set-selections
          echo 'locales locales/default_environment_locale select en_US.UTF-8' | debconf-set-selections

          echo 'keyboard-configuration  keyboard-configuration/layout select  English (UK)' | debconf-set-selections

          locale-gen en_US.UTF-8
          ln -fs /usr/share/zoneinfo/Europe/Warsaw /etc/localtime

          DEBIAN_FRONTEND=noninteractive \
            DEBCONF_NONINTERACTIVE_SEEN=true \
            apt-get install tzdata -y --no-install-recommends

          apt-get autoclean -yqq
          apt-get autoremove -yqq
    - run:
        name: Checkout modules
        command: |
          git submodule update --init --recursive --recommend-shallow
    - run:
        name: Run an installation
        command: |
          DEBIAN_FRONTEND=noninteractive \
            DEBCONF_NONINTERACTIVE_SEEN=true \
            ./install \
            "${CIRCLE_USERNAME}" \
            "${CIRCLE_BUILD_NUM}" \
            "${CIRCLE_USERNAME}@${CIRCLE_PROJECT_REPONAME}.${CIRCLE_BUILD_NUM}"
            "Circle Builds"
            "$(echo ${CIRCLE_USERNAME} | base64)"

version: 2
jobs:
  shellcheck:
    docker:
      - image: nlknguyen/alpine-shellcheck:latest
    steps:
      - checkout
      - run:
          name: Check Scripts
          command: |
            shellcheck install post-install pre-install --external-sources
            find bin/ -type f | xargs shellcheck --external-sources
            find .installer/ -type f | xargs shellcheck --external-sources
            find . -type f -name '*.sh' | wc -l
            find . -type f -name '*.sh' | xargs shellcheck --external-sources

  submodules:
    machine: true
    steps:
      - checkout
      - run:
          name: "Submodules :: checkout"
          command: |
            git submodule update --init --recursive --recommend-shallow
      - run:
          name: "Submodules :: status"
          command: |
            git submodule status

  build_ubuntu_19:
    docker:
      - image: ubuntu:19.04
    <<: *build_steps

workflows:
  version: 2
  verify:
    jobs:
      - submodules
      - shellcheck
  build:
    jobs:
      - build_ubuntu_19
